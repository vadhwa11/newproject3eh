/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2016-01-19 05:41:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import static jkt.hms.util.RequestConstants.*;
import java.util.*;
import jkt.hms.util.HMSUtil;
import jkt.hms.masters.business.MasServiceType;
import jkt.hms.masters.business.MasEmployee;
import jkt.hms.masters.business.ProcedureHeader;
import jkt.hms.util.Box;
import jkt.hms.masters.business.MasNursingCare;
import jkt.hms.masters.business.InjectionRegister;
import jkt.hms.masters.business.PatientPrescriptionDetails;
import jkt.hms.masters.business.PatientPrescriptionHeader;
import jkt.hms.masters.business.InjAppointmentHeader;

public final class injectionWaitingList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" language=\"javascript\"src=\"/hms/jsp/js/calendar.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" language=\"javascript\"src=\"/hms/jsp/js/common.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" language=\"javascript\"src=\"/hms/jsp/js/hms.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" language=\"javascript\"src=\"/hms/jsp/js/proto.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"language=\"javascript\">\r\n");
      out.write("\t");

	
		Calendar calendar=Calendar.getInstance();
		String month=String.valueOf((calendar.get(Calendar.MONTH))+1);
		String date=String.valueOf(calendar.get(Calendar.DATE));
		int year=calendar.get(calendar.YEAR);
		if(month.length()<2){
			month="0"+month;
		}
		if(date.length()<2){
			date="0"+date;
		}
			
	
      out.write("\r\n");
      out.write("\t\tserverdate = '");
      out.print(date+"/"+month+"/"+year);
      out.write("'\r\n");
      out.write("\t\t\r\n");
      out.write("\tfunction datevalidation(){\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tvar fdate = document.getElementById('FromDateId');\r\n");
      out.write("\tvar tdate = document.getElementById('ToDateId');\r\n");
      out.write("\t\r\n");
      out.write("\tfrdate  = new Date(fdate.value.substring(6),(fdate.value.substring(3,5) - 1) ,fdate.value.substring(0,2));\r\n");
      out.write("\ttodate  = new Date(tdate.value.substring(6),(tdate.value.substring(3,5) - 1) ,tdate.value.substring(0,2));\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tif(fdate.value != \"\" && todate.value != \"\"){\r\n");
      out.write("\t if(frdate > todate){\r\n");
      out.write("\t  alert(\"To Date should be greater than or equal to the From Date.\");\r\n");
      out.write("\t   return false;\r\n");
      out.write("\t  }\r\n");
      out.write("\t}else{\r\n");
      out.write("\t return false;\r\n");
      out.write("\t}\r\n");
      out.write("\treturn true;\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t");

	Map<String, Object> map = new HashMap<String, Object>();
	if(request.getAttribute("map") != null){
		map = (Map<String, Object>)request.getAttribute("map");
	}
	Map<String,Object> utilMap = new HashMap<String,Object>();
	utilMap = (Map)HMSUtil.getCurrentDateAndTime();
	String currentDate = (String)utilMap.get("currentDate");  
	
	List<MasEmployee> doctorList = new ArrayList<MasEmployee>();
	if(map.get("doctorList") != null){
		doctorList= (List<MasEmployee>)map.get("doctorList");
	}
/*	List<PatientPrescriptionHeader> pendingInjectionList = new ArrayList<PatientPrescriptionHeader>();
	if(map.get("pendingInjectionList") != null){
		pendingInjectionList= (List<PatientPrescriptionHeader>)map.get("pendingInjectionList");
	}*/
	List<InjAppointmentHeader> pendingInjectionAppList = new ArrayList<InjAppointmentHeader>();
	if(map.get("pendingInjectionAppList") != null){
		pendingInjectionAppList= (List<InjAppointmentHeader>)map.get("pendingInjectionAppList");
	}
	String message = "";
	if(map.get("message") != null){
		message = (String)map.get("message");
	}
	Box box= HMSUtil.getBox(request);
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form name=\"injectionWaitList\" method=\"post\" action=\"\">\r\n");
      out.write("\t<h4>");
      out.print(message );
      out.write("</h4>\r\n");
      out.write("<div class=\"Clear\"></div>\r\n");
      out.write("<div class=\"titleBg\"><h2>Injection Register</h2></div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"Clear\"></div>\r\n");
      out.write("<div class=\"Block\">\r\n");
      out.write("<div class=\"Clear\"></div>\r\n");
      out.write("<label> From Date <span>*</span></label>\r\n");
      out.write("<input type=\"text\" id=\"FromDateId\" name=\"");
      out.print(FROM_DATE );
      out.write("\" value=\"");
      out.print((!box.getString(FROM_DATE).equals("") ? box.getString(FROM_DATE) : currentDate) );
      out.write("\" class=\"calDate\" readonly=\"readonly\"MAXLENGTH=\"30\" /> \r\n");
      out.write("<img src=\"/hms/jsp/images/cal.gif\" width=\"16\" height=\"16\" border=\"0\" validate=\"Pick a date\" class=\"calender\"\r\n");
      out.write("\tonClick=\"setdate('");
      out.print(currentDate);
      out.write("',document.injectionWaitList.");
      out.print(FROM_DATE);
      out.write(",event)\" />\r\n");
      out.write("\r\n");
      out.write("<label>To Date <span>*</span></label>\r\n");
      out.write(" <input type=\"text\" id=\"ToDateId\"name=\"");
      out.print(TO_DATE );
      out.write("\" value=\"");
      out.print((!box.getString(TO_DATE).equals("") ? box.getString(TO_DATE) : currentDate) );
      out.write("\" class=\"calDate\"\treadonly=\"readonly\" MAXLENGTH=\"30\" /> \r\n");
      out.write("\t<img src=\"/hms/jsp/images/cal.gif\" width=\"16\" height=\"16\" border=\"0\"\r\n");
      out.write("\tvalidate=\"Pick a date\" class=\"calender\"\tonClick=\"setdate('");
      out.print(currentDate);
      out.write("',document.injectionWaitList.");
      out.print(TO_DATE);
      out.write(",event)\" />\r\n");
      out.write("\t\r\n");
      out.write("<label>Service No. </label>\r\n");
      out.write("<input type=\"text\" name=\"");
      out.print(SERVICE_NO );
      out.write("\" id=\"serviceNo\" value=\"");
      out.print((!box.getString(SERVICE_NO).equals("") ? box.getString(SERVICE_NO) : "") );
      out.write("\" validate=\"Service No.,metachar,no\" /> \r\n");
      out.write("<div class=\"Clear\"></div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"Clear\"></div>\t\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"Clear\"></div>\r\n");
      out.write("<input type=\"button\" name=\"search\" value=\"Search\" class=\"button\"\r\n");
      out.write("\tonClick=\"if(datevalidation()){submitForm('injectionWaitList','/hms/hms/registration?method=getPendingInjectionList');}\" />\r\n");
      out.write("\r\n");
      out.write("<div class=\"Clear\"></div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"division\"></div>\r\n");

//	if(pendingInjectionList.size() > 0 || pendingInjectionAppList.size() > 0){
	if(pendingInjectionAppList.size() > 0){

      out.write("\r\n");
      out.write("<h4>Waiting List</h4>\r\n");
      out.write("<div id=\"reg\">\r\n");
      out.write("<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th scope=\"col\">Date</th>\r\n");
      out.write("\t\t<th scope=\"col\">Service No.</th>\r\n");
      out.write("\t\t<th scope=\"col\">Patient Name</th>\r\n");
      out.write("\t\t<th scope=\"col\">Relation</th>\r\n");
      out.write("\t\t<th scope=\"col\">Rank</th>\r\n");
      out.write("\t\t<th scope=\"col\">Name</th>\r\n");
      out.write("\t\t<th scope=\"col\">Age</th>\r\n");
      out.write("\t\t<th scope=\"col\">Medical Officer</th>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t\t");
if(pendingInjectionAppList.size() > 0){
			for(InjAppointmentHeader injAppointmentHeader : pendingInjectionAppList){
				String bgcolor = "";
				System.out.println("prio--"+injAppointmentHeader.getVisit().getPriorityNumber());
				if(injAppointmentHeader.getVisit().getPriorityNumber()==1){
					bgcolor="#B40404";
				}
				else if(injAppointmentHeader.getVisit().getPriorityNumber()==2){
					bgcolor="#FFFF00";
				}
				else if(injAppointmentHeader.getVisit().getPriorityNumber()==3){
					bgcolor="#A0E0AA";
				}
				PatientPrescriptionHeader prescriptionHeader = injAppointmentHeader.getPrescription();
		
      out.write("\r\n");
      out.write("\t\t\t<tr onclick=\"getDetails('");
      out.print(injAppointmentHeader.getId() );
      out.write("');\">\r\n");
      out.write("\t<td style=\"background:");
      out.print(bgcolor );
      out.write(';');
      out.write('"');
      out.write('>');
      out.print(HMSUtil.convertDateToStringWithoutTime(injAppointmentHeader.getAppointmentDate()) );
      out.write("</td>\r\n");
      out.write("\t<td style=\"background:");
      out.print(bgcolor );
      out.write(';');
      out.write('"');
      out.write('>');
      out.print(prescriptionHeader.getHin().getServiceNo() !=null?prescriptionHeader.getHin().getServiceNo():"");
      out.write("</td>\r\n");
      out.write("\t");

	String middleName = "";
	String lastName = "";
	if(prescriptionHeader.getHin().getPMiddleName() != null){
		middleName = prescriptionHeader.getHin().getPMiddleName();
	}
	if(prescriptionHeader.getHin().getPLastName() != null){
		lastName = prescriptionHeader.getHin().getPLastName();
	}

	
      out.write("\r\n");
      out.write("\t<td style=\"background:");
      out.print(bgcolor );
      out.write(';');
      out.write('"');
      out.write('>');
      out.print(prescriptionHeader.getHin().getPFirstName()+" "+middleName+" "+lastName );
      out.write("</td>\r\n");
      out.write("\t<td style=\"background:");
      out.print(bgcolor );
      out.write(';');
      out.write('"');
      out.write('>');
      out.print(prescriptionHeader.getHin().getRelation().getRelationName() );
      out.write("</td>\r\n");
      out.write("\t<td style=\"background:");
      out.print(bgcolor );
      out.write(';');
      out.write('"');
      out.write('>');
      out.print(prescriptionHeader.getHin().getRank().getRankName() );
      out.write("</td>\r\n");
      out.write("\t");

	String sMiddleName = "";
	String sLastName = "";

	if(prescriptionHeader.getHin().getSMiddleName() != null){
		sMiddleName = prescriptionHeader.getHin().getSMiddleName();
	}
	if(prescriptionHeader.getHin().getSLastName() != null){
		sLastName = prescriptionHeader.getHin().getSLastName();
	}

      out.write("\r\n");
      out.write("\t<td style=\"background:");
      out.print(bgcolor );
      out.write(';');
      out.write('"');
      out.write('>');
      out.print(prescriptionHeader.getHin().getSFirstName()+" "+sMiddleName+" "+sLastName );
      out.write("</td>\r\n");
      out.write("\t<td style=\"background:");
      out.print(bgcolor );
      out.write(';');
      out.write('"');
      out.write('>');
      out.print(prescriptionHeader.getHin().getAge() );
      out.write("</td>\r\n");
      out.write("\t");

	String moName = prescriptionHeader.getPrescriptionBy().getFirstName();
	if(prescriptionHeader.getPrescriptionBy().getMiddleName()!= null){
		moName += " "+prescriptionHeader.getPrescriptionBy().getMiddleName();
	}
	if(prescriptionHeader.getPrescriptionBy().getLastName()!= null){
		moName += " "+prescriptionHeader.getPrescriptionBy().getLastName();
	}
	
      out.write("\r\n");
      out.write("\t<td style=\"background:");
      out.print(bgcolor );
      out.write(';');
      out.write('"');
      out.write('>');
      out.print(moName );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
}
			}
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<div class=\"Clear\"></div>\t\r\n");
      out.write("\t\r\n");
      out.write("<input type=\"text\" class=\"signPriority1\" readonly=\"readonly\">\r\n");
      out.write("<label class=\"valueAutoPriority\">Priority-1</label>\r\n");
      out.write("<input type=\"text\" class=\"signPriority2\" readonly=\"readonly\">\r\n");
      out.write("<label class=\"valueAutoPriority\">Priority-2</label>\r\n");
      out.write("<input type=\"text\" class=\"signPriority3\" readonly=\"readonly\">\r\n");
      out.write("<label class=\"valueAutoPriority\">Priority-3</label>\r\n");
      out.write("<div class=\"Clear\"></div>\r\n");
      out.write("</div>\r\n");
}else{ 
      out.write("\r\n");
      out.write("<h4>No Record Found</h4>\r\n");
} 
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("<script>\r\n");
      out.write("function getDetails(appointmentId){\r\n");
      out.write("\r\n");
      out.write("\tif(validateMetaCharacters(appointmentId)){\r\n");
      out.write("\t\tsubmitForm('injectionWaitList','/hms/hms/registration?method=getInjectionDetails&appointmentId='+appointmentId);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
