<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<import resource="eha-applicationContext.xml" />


	<!-- Code For slow Moving Drugs Stock Register -->
	<!-- <bean id="cronTriggerForSlowMovingItems"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessSlowMovingItems" />
		</property>

		<property name="cronExpression" value="0 0 17 * * ?" />

	</bean>
	<bean name="batchProcessSlowMovingItems"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.stores.controller.SlowMovingItems</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="storesDataService" value-ref="storesDataService" />
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForSlowMovingItems" />
			</list>
		</property>
	</bean> -->

	<!-- Code For Scheduler Stock Register -->
	<!-- <bean id="cronTriggerForStockRegister"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessStockRegister" />
		</property>
		<property name="cronExpression" value="0 57 13 * * ?" />
	</bean>
	<bean name="batchProcessStockRegister"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.stores.controller.StoreStockRegisterCronJob</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="storesDataService" value-ref="storesDataService" />
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForStockRegister" />
			</list>
		</property>
	</bean> -->

	<!-- Code For Scheduler hl7 data transfer to central server -->
	<!-- <bean id="cronTriggerForHl7ForServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7ForServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean id="servletContext"
		class="org.springframework.web.context.support.ServletContextFactoryBean" />
	<bean name="batchProcessHl7ForServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.stores.controller.HL7SchedularForLean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="opdDataService" value-ref="opdDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7ForServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for central server -->

	<!-- start for ip admission for central server -->
	<!-- <bean id="cronTriggerForHl7IpAdmissionForServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7IpAdmissionForServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7IpAdmissionForServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.IpAdmissionToServerSchedular</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="adtDataService" value-ref="adtDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7IpAdmissionForServer" />
			</list>
		</property>
	</bean> -->
	<!-- end ip admission for central server -->

	<!-- start for ipd data for central server -->
	<!-- <bean id="cronTriggerForHl7IpdDataForServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7IpdDataForServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7IpdDataForServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.ipd.controller.IpdDataToServerSchedular</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="ipdDataService" value-ref="ipdDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7IpdDataForServer" />
			</list>
		</property>
	</bean> -->
	<!-- end ipd data for central server -->

	<!-- start for patient registration data for central server -->
	<!-- <bean id="cronTriggerForHl7PatientRegistrationDataForServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7PatientRegistrationDataForServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7PatientRegistrationDataForServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.PatientRegistrationDataToServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="registrationDataService" value-ref="registrationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7PatientRegistrationDataForServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient registration data central server -->

	<!-- start for patient visit data send to central server -->
<!-- 	<bean id="cronTriggerForHl7PatientVisitDataForCentralServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7PatientVisitDataForCentralServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7PatientVisitDataForCentralServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.PatientVisitDataToCentralServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="registrationDataService" value-ref="registrationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7PatientVisitDataForCentralServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient visit data send to central server -->

	<!-- Code For Scheduler hl7 data transfer to lean server -->
	<!-- <bean id="cronTriggerForHl7ForLean"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7ForLean" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7ForLean"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.stores.controller.HL7SchedularForCentralToLean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="opdDataService" value-ref="opdDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7ForLean" />
			</list>
		</property>
	</bean> -->
	<!-- end for lean server -->

	<!-- start for ip admission for lean server -->
	<!-- <bean id="cronTriggerForHl7IpAdmissionForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7IpAdmissionForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7IpAdmissionForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.IpAdmissionToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="adtDataService" value-ref="adtDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7IpAdmissionForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end ip admission lean server -->

	<!-- start for ipd data for lean server -->
	<!-- <bean id="cronTriggerForHl7IpdDataForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7IpdDataForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7IpdDataForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.ipd.controller.IpdDataToLeanServerSchedular</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="ipdDataService" value-ref="ipdDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7IpdDataForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end ipd data to lean server -->

	<!-- start for patient registration data for lean server -->
	<!-- <bean id="cronTriggerForHl7PatientRegistrationDataForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7PatientRegistrationDataForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7PatientRegistrationDataForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.PatientRegistrationDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="registrationDataService" value-ref="registrationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7PatientRegistrationDataForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient registration data -->

	<!-- start for patient visit data send to lean server -->
	<!-- <bean id="cronTriggerForHl7PatientVisitDataForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7PatientVisitDataForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7PatientVisitDataForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.PatientVisitDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="registrationDataService" value-ref="registrationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7PatientVisitDataForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient visit data send to lean server -->

	<!-- start for patient discharge data send to lean server -->
	<!-- <bean id="cronTriggerForHl7PatientDischargeDataForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7PatientDischargeDataForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7PatientDischargeDataForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.PatientDischargeDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="adtDataService" value-ref="adtDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7PatientDischargeDataForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient discharge data send to lean server -->

	<!-- start for Stock transfer data send to lean server -->
	<!-- <bean id="cronTriggerForHl7StockTransferLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7StockTransferLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7StockTransferLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.stores.controller.StockTransferDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="storesDataService" value-ref="storesDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7StockTransferLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for Stock transfer data send to lean server -->

	<!-- start for medicine pres data send to lean server -->
	<!-- <bean id="cronTriggerForHl7MedicinePresLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7MedicinePresLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7MedicinePresLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.stores.controller.MedicinePresDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="storesDataService" value-ref="storesDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7MedicinePresLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for medicine pres data send to lean server -->

	<!-- start for medicine pres data send to central server -->
	<!-- <bean id="cronTriggerForHl7MedicinePresCentralServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7MedicinePresCentralServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7MedicinePresCentralServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.stores.controller.MedicinePresDataToCentralServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="storesDataService" value-ref="storesDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7MedicinePresCentralServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for medicine pres data send to central server -->

	<!-- start for patient pharmacy visit update send to central server -->
	<!-- <bean id="cronTriggerForHl7PatientVisitUpdateForCentralServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7PatientVisitUpdateForCentralServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7PatientVisitUpdateForCentralServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.PatientVisitUpdateToCentralServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="registrationDataService" value-ref="registrationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7PatientVisitUpdateForCentralServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient visit data send to central server -->

	<!-- start for patient pharmacy visit update send to lean server -->
	<!-- <bean id="cronTriggerForHl7PatientVisitUpdateForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessHl7PatientVisitUpdateForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessHl7PatientVisitUpdateForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.PatientVisitUpdateToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="registrationDataService" value-ref="registrationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForHl7PatientVisitUpdateForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient visit data send to lean server -->

	<!-- start for patient online registration verification SMS -->
<!-- 	<bean id="cronTriggerForPatientOnlineRegistrationSMS"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientOnlineRegistrationSMS" />
		</property>
		<property name="cronExpression" value="*/30 * * * * ?" />
	</bean>
	<bean name="batchProcessPatientOnlineRegistrationSMS"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.OnlineRegistrationSmsSchedular</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="adtDataService" value-ref="adtDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientOnlineRegistrationSMS" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient online registration verification SMS -->

	<!-- start for patient online appointment SMS -->
	<!-- <bean id="cronTriggerForPatientAppointmentSMS"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientAppointmentSMS" />
		</property>
		<property name="cronExpression" value="*/30 * * * * ?" />
	</bean>
	<bean name="batchProcessPatientAppointmentSMS"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.OnlineAppointmentSmsSchedular</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="adtDataService" value-ref="adtDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientAppointmentSMS" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient online appointment SMS -->

	<!-- start for token and serial no data send to central server -->
	<!-- <bean id="cronTriggerForTokenSerialNoCentralServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessTokenSerialNoCentralServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessTokenSerialNoCentralServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.TokenSerialToCentralServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="registrationDataService" value-ref="registrationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForTokenSerialNoCentralServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for token and serial no data send to central server -->

	<!-- start for patient appointment data to lean server -->
	<!-- <bean id="cronTriggerForPatientAppointmentDataForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientAppointmentDataForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientAppointmentDataForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.PatientAppointmentDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="registrationDataService" value-ref="registrationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientAppointmentDataForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient appointment data -->


	<!-- start for patient appointment data to central server -->
	<!-- <bean id="cronTriggerForPatientAppointmentDataForCentralServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientAppointmentDataForCentralServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientAppointmentDataForCentralServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.PatientAppointmentDataToCentralServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="registrationDataService" value-ref="registrationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientAppointmentDataForCentralServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient appointment data -->

	<!-- start for Kmscl Integration -->
	<!-- <bean id="cronTriggerForKmsclIntegration"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessKmsclIntegration" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessKmsclIntegration"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.kmscl.Controller.KmsclIntegrationScheduler</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="billingDataService" value-ref="billingDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForKmsclIntegration" />
			</list>
		</property>
	</bean> -->
	<!-- end for Kmscl Integration -->

	<!-- start for patient sample collection data to central server -->
	<!-- <bean id="cronTriggerForPatientSampleCollectionDataForCentralServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientSampleCollectionDataForCentralServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientSampleCollectionDataForCentralServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.lab.controller.PatientSampleCollectionDataToCentralServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="labDataService" value-ref="labDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientSampleCollectionDataForCentralServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient sample collection data -->

	<!-- start for patient sample collection data to lean server -->
	<!-- <bean id="cronTriggerForPatientSampleCollectionDataForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientSampleCollectionDataForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientSampleCollectionDataForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.lab.controller.PatientSampleCollectionDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="labDataService" value-ref="labDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientSampleCollectionDataForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient sample collection data -->

	<!-- start for patient sample validation data to central server -->
	<!-- <bean id="cronTriggerForPatientSampleValidationDataForCentralServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientSampleValidationDataForCentralServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientSampleValidationDataForCentralServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.lab.controller.PatientSampleValidationDataToCentralServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="labDataService" value-ref="labDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientSampleValidationDataForCentralServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient sample validation data -->

	<!-- start for patient sample validation data to lean server -->
	<!-- <bean id="cronTriggerForPatientSampleValidationDataForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientSampleValidationDataForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientSampleValidationDataForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.lab.controller.PatientSampleValidationDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="labDataService" value-ref="labDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientSampleValidationDataForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient sample validation data -->

	<!-- start for patient result entry data to central server -->
	<!-- <bean id="cronTriggerForPatientResultEntryDataForCentralServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientResultEntryDataForCentralServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientResultEntryDataForCentralServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.investigation.controller.PatientResultEntryDataToCentralServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="investigationDataService" value-ref="investigationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientResultEntryDataForCentralServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient result entry data -->

	<!-- start for patient result entry data to lean server -->
	<!-- <bean id="cronTriggerForPatientResultEntryDataForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientResultEntryDataForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientResultEntryDataForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.investigation.controller.PatientResultEntryDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="investigationDataService" value-ref="investigationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientResultEntryDataForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient result entry data -->

	<!-- start for patient result validation data to central server -->
	<!-- <bean id="cronTriggerForPatientResultValidationDataForCentralServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientResultValidationDataForCentralServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientResultValidationDataForCentralServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.investigation.controller.PatientResultValidationDataToCentralServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="investigationDataService" value-ref="investigationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientResultValidationDataForCentralServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient result validation data -->
	
	<!-- start for patient result validation data to lean server -->
	<!-- <bean id="cronTriggerForPatientResultValidationDataForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientResultValidationDataForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientResultValidationDataForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.investigation.controller.PatientResultValidationDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="investigationDataService" value-ref="investigationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientResultValidationDataForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient result validation data -->


	<!-- start for patient order booking data to central server -->
	<!-- <bean id="cronTriggerForPatientOrderBookingDataForCentralServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientOrderBookingDataForCentralServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientOrderBookingDataForCentralServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.lab.controller.PatientOrderBookingDataToCentralServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="labDataService" value-ref="labDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientOrderBookingDataForCentralServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient order booking data -->

	<!-- start for patient order booking data to lean server -->
	<!-- <bean id="cronTriggerForPatientOrderBookingDataForLeanServer"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessPatientOrderBookingDataForLeanServer" />
		</property>
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	<bean name="batchProcessPatientOrderBookingDataForLeanServer"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.lab.controller.PatientOrderBookingDataToLeanServerSchedular
			</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="labDataService" value-ref="labDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForPatientOrderBookingDataForLeanServer" />
			</list>
		</property>
	</bean> -->
	<!-- end for patient order booking data -->


	<!-- Queue Management Scheduler -->

	<bean id="cronTriggerForTokenDisplay"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessTokenDisplay" />
		</property>
		<property name="cronExpression" value="0/10 * * * * ?" />
	</bean>
	<bean name="batchProcessTokenDisplay"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.TokenDisplayScheduler</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="registrationDataService" value-ref="registrationDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForTokenDisplay" />
			</list>
		</property>
	</bean>

	<!-- End :  Queue Management Scheduler -->

	<!-- Patient Investigation Result SMS Scheduler -->

	<bean id="cronTriggerForInvestigationResultSMS"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="batchProcessInvestigationResultSMS" />
		</property>
		<property name="cronExpression" value="*/30 * * * * ?" />
	</bean>
	<bean name="batchProcessInvestigationResultSMS"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean ">
		<property name="jobClass">
			<value>jkt.hms.adt.controller.InvestigationResultSmsSchedular</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="adtDataService" value-ref="adtDataService" />
				<entry key="servletContext">
					<ref bean="servletContext" />
				</entry>
			</map>
		</property>
		<property name="durability">
			<value>true</value>
		</property>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTriggerForInvestigationResultSMS" />
			</list>
		</property>
	</bean>

	<!-- End : Patient Investigation Result SMS Scheduler -->

</beans>