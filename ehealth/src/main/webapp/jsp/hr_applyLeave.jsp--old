<%@ page import="static jkt.hrms.util.HrmsRequestConstants.*"%>

<%@page import="java.util.Map"%>
<%@page import="java.util.List"%>
<%@page import="java.util.Iterator"%>
<%@page import="java.util.Calendar"%>
<%@page import="java.util.Date"%>
<%@page import="org.apache.commons.lang.RandomStringUtils"%>
<%@page import="jkt.hms.masters.business.Users"%>
<%@page import="jkt.hrms.masters.business.UserManager"%>
<%@page import="jkt.hrms.masters.business.HrLeaveDetails"%>
<%@page import="jkt.hrms.masters.business.Holidaycalendar"%>
<%@page import="jkt.hrms.util.LeaveManagementUtil"%>
<%@page import="java.util.ArrayList"%>
<%@page import="jkt.hrms.masters.business.HrMasLeaveTypeMediator"%>
<%@page import="jkt.hrms.masters.business.HrEmployeeBalanceNew"%>
<%@page import="java.text.DecimalFormat"%>
<%@page import="java.util.StringTokenizer"%>
<%@page import="java.text.DateFormat"%>
<%@page import="java.text.SimpleDateFormat"%>
<%@page import="jkt.hms.util.HMSUtil"%>
<script type="text/javascript" language="javascript" src="/hms/jsp/js/proto.js"></script>
<script type="text/javascript" src="/hms/jsp/js/csrfToken.js"></script>
<%
	session.setAttribute("save", true);
	Map map = (Map) request.getAttribute("map");
	List mgr = (List) map.get("manager");
	request.getSession(true);
	Users loggedUser = (Users) session.getAttribute(USERS);
	UserManager manager = null;
	if (mgr != null && mgr.size() > 0) {
		manager = (UserManager) mgr.get(0);
	}

	List listOfHolidays = (List) map.get("listOfHolidays");
	List<HrEmployeeBalanceNew> leaveBalance = (List) map
			.get("leaveBalance");

	List<HrMasLeaveTypeMediator> listOfTypesOfLeaves = new ArrayList<HrMasLeaveTypeMediator>();
	List<Integer> empDependents = new ArrayList<Integer>();
	List<MasDepartment> masDepartmentList = new ArrayList<MasDepartment>();
	List<Object> empMatAvailedOrNot = new ArrayList<Object>();
	List<Object> empPatAvailedOrNot = new ArrayList<Object>();
	String statusMaternity = "";
	String statusPaternity = "";

	if (map.get("listOfTypesOfLeaves") != null) {
		listOfTypesOfLeaves = (List) map.get("listOfTypesOfLeaves");
	}
	if (map.get("empDependents") != null) {
		empDependents = (List) map.get("empDependents");
	}
	if (map.get("empMatAvailedOrNot") != null) {
		empMatAvailedOrNot = (List) map.get("empMatAvailedOrNot");
	}
	if (map.get("empPatAvailedOrNot") != null) {
		empPatAvailedOrNot = (List) map.get("empPatAvailedOrNot");
	}
	if (map.get("masDepartmentList") != null) {
		masDepartmentList = (List) map.get("masDepartmentList");
	}
	if (empMatAvailedOrNot.size() > 0) {
		statusMaternity = (String) empMatAvailedOrNot.get(0);
	}
	if (empPatAvailedOrNot.size() > 0) {
		statusPaternity = (String) empPatAvailedOrNot.get(0);
	}
	int childrenCount = empDependents.get(0);
%>
<%@page import="jkt.hms.masters.business.MasDepartment"%>
<script>
<%
		Calendar calendar=Calendar.getInstance();

        String month=String.valueOf((calendar.get(Calendar.MONTH))+1);
		String date=String.valueOf(calendar.get(Calendar.DATE));
		int year=calendar.get(calendar.YEAR);
		if(month.length()<2){
			month="0"+month;
		}
		if(date.length()<2){
			date="0"+date;
		}
%>

serverdate = '<%=date+"/"+month+"/"+year%>'

var errorMsg = '';
window.onload=function()
{
showLeaveBalance(13);
document.getElementById('balance').value = ''
//document.getElementById('balanceLbl').innerHTML = ''
//document.getElementById('balanceLbl').innerHTML = 'Balance:';
//document.getElementById('allowDayLbl').innerHTML ='';
//document.getElementById('allowDayLbl').innerHTML ='Entitlement:';
}
 function showHideLineManager(obj){
    	var checkedLineOrOther = obj.value;
    	if(checkedLineOrOther == 'o'){
    		document.getElementById('divLineManager').style.display='none';
    		document.getElementById('<%=APPROVED_BY%>').setAttribute("validate","Approver,string,no");
    		document.getElementById('divOtherManager').style.display='block';
    		document.getElementById('<%=APPROVED_BY_OTHER%>').setAttribute("validate","Approver,string,yes");
    		document.getElementById('<%=DEPARTMENT_ID%>').setAttribute("validate","Department,string,yes");
    	}else{
    		document.getElementById('divLineManager').style.display='block';
    		document.getElementById('<%=APPROVED_BY%>').setAttribute("validate","Approver,string,yes");
    		document.getElementById('divOtherManager').style.display='none';
    		document.getElementById('<%=APPROVED_BY_OTHER%>').setAttribute("validate","Approver,string,no");
    		document.getElementById('<%=DEPARTMENT_ID%>').setAttribute("validate","Department,string,no");
    	}
    }
function showLeaveBalance(idvalue){

	<%
	for(HrEmployeeBalanceNew hrEmployeeBalance  :leaveBalance){
		int id = hrEmployeeBalance.getLeaveType().getLeaveType().getLeaveType().getId();

		String leaveBalance1 = new DecimalFormat("0.##").format((double)Float.valueOf(hrEmployeeBalance.getClosingBalance()));
		if(hrEmployeeBalance.getLeaveType().getLeaveType().getLeaveType().getId().equals(10)){
			%>
				document.getElementById('SLBalance').value='<%=hrEmployeeBalance.getClosingBalance()%>'
		<%}
		if(hrEmployeeBalance.getLeaveType().getLeaveType().getLeaveType().getId().equals(12)){ %>
				document.getElementById('CLBalance').value='<%=hrEmployeeBalance.getClosingBalance()%>'
		<%}
		if(hrEmployeeBalance.getLeaveType().getLeaveType().getLeaveType().getId().equals(13)){ %>
				document.getElementById('PLBalance').value='<%=hrEmployeeBalance.getClosingBalance()%>'
		<%}
		%>
		js =<%= leaveBalance1%>;

		if(idvalue == <%=id%> ){
	    	document.getElementById('hrMasLeaveTypeNewId').value =<%=hrEmployeeBalance.getLeaveType().getLeaveType().getId()%>
	    	if(idvalue==13 && js > 90 ){
				alert("Your PL Balance crossed 90.Please Encash your PL");
			}
	    	document.getElementById('leaveId').value = '<%= hrEmployeeBalance.getLeaveType().getId()%>'
	    	document.getElementById('balanceId').value='<%= hrEmployeeBalance.getId()%>';
		}
		if(idvalue == "" ){
	    	document.getElementById('leaveId').value = '';
	    	document.getElementById('balanceId').value = '';
		}
		<%
	}
	%>
}


	function chkDate()
	{

		var currentDate=new Date(serverdate.substring(6),(serverdate.substring(3,5) - 1),serverdate.substring(0,2));
		obj1 = document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value;
		obj2 = document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value;
		obj3 = document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value;
		no_of_days = document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value;

		fromDate= new Date(obj1.substring(6),(obj1.substring(3,5) - 1) ,obj1.substring(0,2));
		toDate= new Date(obj2.substring(6),(obj2.substring(3,5) - 1) ,obj2.substring(0,2));
		joiningDate = new Date(obj3.substring(6),(obj3.substring(3,5) - 1) ,obj3.substring(0,2));

		var nextDate=new Date(serverdate.substring(6),(serverdate.substring(3,5)),serverdate.substring(0,2));

		if(obj1 != "" && obj2 != "" && obj3 != "")
		{
			if(fromDate > nextDate)
			{
				errorMsg += "Only single month advance leaves can be applied.\n ";
				return false;
			}
			else if(fromDate > toDate)
			{
				errorMsg += "From Date should be smaller than To Date.\n ";
				return false;
			}
			else if(fromDate > joiningDate && toDate > joiningDate)
			{
				errorMsg += "Joining Date should be greater than both dates.\n ";
				return false;
			}
			else if(fromDate > joiningDate)
			{
				errorMsg += "Joining Date should be greater than From date.\n ";
				return false;
			}
			else if(toDate > joiningDate)
			{
				errorMsg += "Joining Date should be greater than To Date.\n ";
				return false;
			}
		}
		if(document.<%=APPLY_LEAVE%>.checkbox.checked && document.<%=APPLY_LEAVE%>.<%=HALF_DAY%>[1].checked==true){
			if(obj1 != "" && obj3 != "")
			{
				if(fromDate > nextDate)
				{
					errorMsg += "Only single month advance leaves can be applied.\n ";
					return false;
				}
				else if(fromDate > joiningDate)
				{
					errorMsg += "Joining Date should be greater than From date.\n ";
					return false;
				}
		  	}
		}
		if(document.<%=APPLY_LEAVE%>.checkbox.checked && document.<%=APPLY_LEAVE%>.<%=HALF_DAY%>[0].checked==true){
			if(obj1 != "")
			{
				if(fromDate > nextDate)
				{
					errorMsg += "Only single month advance leaves can be applied.\n ";
					return false;
				}
			}
		}

	    return true;
	}

var inCalculateDays = false;
function calculateDays(){

		inCalculateDays = true;

	fdate=document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value;
	tdate=document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value;
	if(fdate!="" && tdate!=""){
		inCalculateDays = true;
		count = '<%=RandomStringUtils.randomNumeric(3)%>';

		url="leave?method=getNoOfWorkingDays&abc="+count+"&fromDate="+fdate+"&toDate="+tdate;

		var http_request;
		if (window.XMLHttpRequest) { // Mozilla,Safari, ...
    		http_request = new XMLHttpRequest();
		}
		else if (window.ActiveXObject) { // IE
    		http_request = new ActiveXObject("Microsoft.XMLHTTP");
		}

		http_request.onreadystatechange=function() {callback(http_request) };
		http_request.open("GET",url,true);
		http_request.send(null);
	}

}


function submitThisForm(){
	var returnVal = chkForCasualLeaves();
	if(returnVal){
		if(chkForCLandSL()){
			submitForm('<%=APPLY_LEAVE%>','leave?method=submitLeaveForm','chkDate','paternityCheck','noSatSunOrHoliday');
		}
	}
}

function callback(http_request) {


    if (http_request.readyState == 1 || http_request.readyState==2 || http_request.readyState==3 || http_request.readyState==0) {
    document.<%=APPLY_LEAVE%>.apply.disabled = 'disabled';
    document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value = 'calculating ...';

    document.getElementById('waitMessage').style.display = 'block';
    }

    if (http_request.readyState == 4 || http_request.readyState=="complete") {

     var response = http_request.responseText;

     var responsearr = new Array(3);
     responsearr = response.split("$");
     var dys = responsearr[0];
     var holiday=responsearr[1];
     var typeFlag=responsearr[2];

     typeFlag = "";
     document.<%=APPLY_LEAVE%>.holiday.value = holiday;
     document.<%=APPLY_LEAVE%>.typeFlag.value = typeFlag;
     document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value = dys;
     inCalculateDays = false;
     document.<%=APPLY_LEAVE%>.apply.disabled = '';
     document.getElementById('waitMessage').style.display = 'none';
    }
}

function availedRh(){
type=document.getElementById("leaveType").value;

enteredDate=document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value;
enteredMonth=enteredDate.substring(3,5);
if(type==7){
	<%
		if(map.get("listOfRhAvailed")!=null){
			List listOfRhAvailed=(List)map.get("listOfRhAvailed");
			if(listOfRhAvailed.size()==1){
					HrLeaveDetails availedRH=(HrLeaveDetails)listOfRhAvailed.get(0);
					Date availedRh=(Date)availedRH.getFromDate();
					int availRhMonth=availedRh.getMonth();
					if(availRhMonth<=6){%>
					availRhMonth=<%=availRhMonth%>;
					if(enteredMonth<=6){
						alert("You have already availed RH of first half");
						visibleHidden(type);
						resetValues(type);
						readonlyValues(type);
						document.getElementById("leaveType").selectedIndex=0;
						document.getElementById("listOfRestrictedForm").style.display ='none';
						manageCalendar(1);
						}
					<%}
					if(availRhMonth>6){%>
						if(enteredMonth>6){
						alert("You have already availed RH of second half.");
						visibleHidden(type);
						resetValues(type);
						readonlyValues(1);
						document.getElementById("leaveType").selectedIndex=0;
						document.getElementById("listOfRestrictedForm").style.display ='none';
						manageCalendar(type);
						}
					<%}
				}
				if(listOfRhAvailed.size()==2){
	%>
					alert("You have already availed RH.");
					visibleHidden(type);
					resetValues(type);
					readonlyValues(type);
					document.getElementById("leaveType").selectedIndex=0;
					document.getElementById("listOfRestrictedForm").style.display ='none';
					manageCalendar(1);
	<%         }

		}

	%>
	}

}

function noSatSunOrHoliday(){

	if(document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value!='')
		if(!noSatSun(document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value,"fromDate")) return false;
	if(document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value!='')
		if(!noSatSun(document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value,"toDate"))return false;
	if(document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value!='')
		if(!noSatSun(document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value,"joinDate"))return false;
	if(document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value!='' && document.getElementById("leaveType").value==2)
		//if(!checkEncashedDays(document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value)) return false;
	var ans=true;
	 ans = checkNoOfDays();
	if(ans == true)
		return true;
	else
		return false;
}

function noSatSun(serdate,whichDate){
	//serdate = document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value
	anyDate= new Date(serdate.substring(6),(serdate.substring(3,5) - 1) ,serdate.substring(0,2));
    isday=anyDate.getDay();

  	if(isday==0 ){
  			if(whichDate=="fromDate")
  				errorMsg += "From Date cannot be Sunday. \n ";
  			if(whichDate=="toDate")
  				errorMsg += "To Date cannot be Sunday. \n ";
  			if(whichDate=="joinDate")
				errorMsg += "Joining Date cannot be Sunday. \n ";
			return false;
	}
	else{
	<%
		for (Iterator iter = listOfHolidays.iterator(); iter.hasNext();){
		Holidaycalendar element = (Holidaycalendar) iter.next();
		Date h=(Date)element.getHolidayDate();
		String holiday=LeaveManagementUtil.convertDateToStringWithoutTime(h);
	%>
		holi='<%=holiday%>'
		if(serdate==holi){
			if(whichDate=="fromDate")
  				errorMsg += "From Date cannot be holiday. \n ";
  			if(whichDate=="toDate")
  				errorMsg += "To Date cannot be holiday. \n ";
  			if(whichDate=="joinDate")
				errorMsg += "Joining Date cannot be a holiday. \n ";
			return false;
		}
	<%}%>
 	}
 	return true;
}

function availedAnniversaryLeave(){
	type = document.getElementById("leaveType").value;
	if(type==6)
	{
		<%
		if(map.get("anniversaryLeaveList")!=null)
		{
			List anniversaryLeaveList = (List)map.get("anniversaryLeaveList");
			if(anniversaryLeaveList.size()!=0)
			{
			%>
					alert("You have already availed Anniversary leave.")
					document.getElementById("leaveType").selectedIndex=0;
					document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=REASON%>.value = '';
					return false;
		<%  }
		}%>
	}

	return true;

}

function manageDates(type){

	if(type==1 || type > 8){
		visibleHidden(type);
		resetValues(type);
		readonlyValues(type);
		document.<%=APPLY_LEAVE%>.<%=REASON%>.value='';
	}

	//if(type==2){
	//	visibleHidden(type);
	//	resetValues(type);
	//	readonlyValues(type);

	//	document.
	<%//=APPLY_LEAVE%>
	//.
	<%//=REASON%>
	//.
	///value='Encashment Leave';

		<%//if(!"".equals(leaveBalance.getEarned()) && leaveBalance.getEarned()!=null ){
				//Float empLeaveBalance=Float.valueOf(leaveBalance.getEarned());
				//if(empLeaveBalance<2){%>
				// 	alert("You can't avail encashment leave as your leave balance is low.");
				//	document.getElementById("leaveType").selectedIndex=0;
				//	manageCalendar();
				//	visibleHidden(1);
				//	resetValues(1);
				//	readonlyValues(1);

				//	document.
				<%//=APPLY_LEAVE%>
				//.
				<%//=REASON%>
				//.value='';

		<%  //   }
		 // }
		%>
	//}

	if(type==3){
		visibleHidden(type);
		resetValues(type);
		readonlyValues(type);
		document.<%=APPLY_LEAVE%>.<%=REASON%>.value='Maternity Leave';
		<%if("".equals(map.get("anniversary")) || map.get("anniversary")==null){%>
			alert("You can't avail maternity leave.");
			document.getElementById("leaveType").selectedIndex=0;
			manageCalendar();
			document.<%=APPLY_LEAVE%>.<%=REASON%>.value='';
		<%}%>
	}

	if(type==4){
		visibleHidden(type);
		resetValues(type);
		readonlyValues(type);
		document.<%=APPLY_LEAVE%>.<%=REASON%>.value='Paternity Leave';
		<%if("".equals(map.get("anniversary")) || map.get("anniversary")==null){%>
			alert("You can't avail paternity leave.");
			document.getElementById("leaveType").selectedIndex=0;
			manageCalendar();
			document.<%=APPLY_LEAVE%>.<%=REASON%>.value='';
	<%}%>
	}

	if(type==5){
		visibleHidden(type);
		resetValues(type);
		readonlyValues(type);
	   <%
			if(!"".equals(map.get("bday")) && map.get("bday")!=null){
				java.util.Date jDate = (java.util.Date)map.get("bday");
				String bdate=LeaveManagementUtil.convertDateToStringWithoutTime(jDate);
				String birthdate=bdate.replace(bdate.substring(6),Integer.toString(year));
	   %>
	   	bdate="<%=birthdate%>";
	    birthDate= new Date(bdate.substring(6),(bdate.substring(3,5) - 1) ,bdate.substring(0,2));
	  	document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value='<%=bdate.replace(bdate.substring(6),Integer.toString(year))%>';
		document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value='<%=bdate.replace(bdate.substring(6),Integer.toString(year))%>';
		document.<%=APPLY_LEAVE%>.<%=REASON%>.value='Birthday Leave';
	   <%}%>

	   fillJoiningDate(bdate)
	   calculateDays();
	  setTimeout("holidayOnBirthdayOrAnniversary(1,birthDate)",100)
	}
	if(type==6){
		visibleHidden(type);
		resetValues(type);
		readonlyValues(type);
	 <%
	    	if(!"".equals(map.get("anniversary")) && map.get("anniversary")!=null){
	    		java.util.Date jDate = (java.util.Date)map.get("anniversary");
	    		String adate=LeaveManagementUtil.convertDateToStringWithoutTime(jDate);
	 %>
	 	adate = "<%=adate.replace(adate.substring(6),Integer.toString(year))%>";
	 	 anniversaryDate= new Date(adate.substring(6),(adate.substring(3,5) - 1) ,adate.substring(0,2));
		document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value='<%=adate.replace(adate.substring(6),Integer.toString(year))%>';
		document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value='<%=adate.replace(adate.substring(6),Integer.toString(year))%>';
		document.<%=APPLY_LEAVE%>.<%=REASON%>.value='Anniversary Leave';
		fillJoiningDate(adate);
		calculateDays();
		if(availedAnniversaryLeave()){
	     setTimeout("holidayOnBirthdayOrAnniversary(2,anniversaryDate)",100)
	    }
	 <% } else{
	    %>
		alert("You can't take anniversary leave. ");
		document.getElementById("leaveType").selectedIndex=0;
		manageCalendar();
	 <%}%>
	}

	if(type==7){
		visibleHidden(type);
		resetValues(type);
		readonlyValues(type);
		document.<%=APPLY_LEAVE%>.<%=REASON%>.value='Restricted Holiday';
	}

	if(type==8){
		visibleHidden(type);
		resetValues(type);
		readonlyValues(type);
		document.<%=APPLY_LEAVE%>.<%=REASON%>.value='Leave without pay';
	}
}

function visibleHidden(type){

	if(type==1 || type==3 ||  type==4 || type==5 || type==6 ||  type==8 || type==12 || type==13 || type==10){
		document.getElementById("listOfRestrictedForm").style.display ='none';
		document.getElementById("datesForm").style.display="block";
    	document.getElementById("divToDate").style.display="block";
    	document.getElementById("divJoinDate").style.display="block";
		//document.getElementById("datesForm").style.display ='block';
	}
	if(type==2){
		document.getElementById("datesForm").style.display="none";
    	document.getElementById("divToDate").style.display="none";
    	document.getElementById("divJoinDate").style.display="none";
		//document.getElementById("datesForm").style.display ='none';
		document.getElementById("listOfRestrictedForm").style.display ='none';
		if(document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.getAttribute('validate').substring(document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.getAttribute('validate').length-2)=='es'){
		 document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.setAttribute('validate',document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.getAttribute('validate').substring(0,document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.getAttribute('validate').length-3)+'no')
		 document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.setAttribute('validate',document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').substring(0,document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').length-3)+'no')
		 document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.setAttribute('validate',document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.getAttribute('validate').substring(0,document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.getAttribute('validate').length-3)+'no')

	  }
	}
	if(type==1 || type==3 ||  type==4 || type==5 || type==6 || type==7 || type==8){
		if(document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.getAttribute('validate').substring(document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.getAttribute('validate').length-2)=='no'){
		 document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.setAttribute('validate',document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.getAttribute('validate').substring(0,document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.getAttribute('validate').length-2)+'yes')
		 document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.setAttribute('validate',document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').substring(0,document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').length-2)+'yes')
		 document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.setAttribute('validate',document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.getAttribute('validate').substring(0,document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.getAttribute('validate').length-2)+'yes')

	  }
	}
	if(type==7){
		document.getElementById("listOfRestrictedForm").style.display ='block';
		//document.getElementById("datesForm").style.display ='block';
		document.getElementById("listOfRestrictedForm").style.display ='none';
		document.getElementById("datesForm").style.display="block";
    	document.getElementById("divToDate").style.display="block";
    	document.getElementById("divJoinDate").style.display="block";
	}
	if(type==20){
		document.getElementById("listOfRestrictedForm").style.display ='block';
		//document.getElementById("datesForm").style.display ='block';
		document.getElementById("listOfRestrictedForm").style.display ='none';
		document.getElementById("datesForm").style.display="block";

    	document.getElementById("divToDate").style.display="none";

    	document.getElementById("divJoinDate").style.display="block";
	}
	if(type==8 && document.getElementById("halfDayChkBox").checked)
	{
		document.getElementById("listOfRestrictedForm").style.display ='block';
		//document.getElementById("datesForm").style.display ='block';
		document.getElementById("listOfRestrictedForm").style.display ='none';
		document.getElementById("datesForm").style.display="block";

    	document.getElementById("divToDate").style.display="none";

    	document.getElementById("divJoinDate").style.display="block";
	}
	if(type==12 && document.getElementById("halfDayChkBox").checked)
	{
		document.getElementById("listOfRestrictedForm").style.display ='block';
		//document.getElementById("datesForm").style.display ='block';
		document.getElementById("listOfRestrictedForm").style.display ='none';
		document.getElementById("datesForm").style.display="block";

    	document.getElementById("divToDate").style.display="none";

    	document.getElementById("divJoinDate").style.display="block";
	}
	if(type==13 && document.getElementById("halfDayChkBox").checked)
	{
		document.getElementById("listOfRestrictedForm").style.display ='block';
		//document.getElementById("datesForm").style.display ='block';
		document.getElementById("listOfRestrictedForm").style.display ='none';
		document.getElementById("datesForm").style.display="block";

    	document.getElementById("divToDate").style.display="none";

    	document.getElementById("divJoinDate").style.display="block";
	}

}
function setHalfDay()
{
	if(document.getElementById("halfDayChkBox").checked)
	{
		document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value=document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value;
	}
}

function resetValues(type){
	if(type==1 || type==2 ||  type==3 || type==4 || type==5 || type==6 || type==7 ||  type==8 || type > 8){
		document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value="";
		document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value="";

		if(document.<%=APPLY_LEAVE%>.checkbox.checked == false){
			document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value="";
		}

		document.<%=APPLY_LEAVE%>.<%=REASON%>.value="";
	}
	document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value="";
}

function readonlyValues(type){
	if(type==2){
		document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.readOnly=false;
	}
	else{
		document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.readOnly=true;
	}
	document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.readOnly=true;
	document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.readOnly=true;
}

function holidayOnBirthdayOrAnniversary(callingBlock,aDate){
	var currentDate=new Date(serverdate.substring(6),(serverdate.substring(3,5) - 1),serverdate.substring(0,2));
	noOfDays=document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value;
	if(noOfDays==0 && document.<%=APPLY_LEAVE%>.holiday.value =='y'){
		if(callingBlock==1){
			alert("You already have holiday on your birthday but your leave balance will be increased by 1 at the end of the month!")
			document.getElementById("leaveType").selectedIndex=0;
			manageCalendar(1);
			document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=REASON%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value = '';
			return false;
		}
		else if(callingBlock==2){
			alert("You already have holiday on your anniversary but your leave balance will be increased by 1 at the end of the month!")
			document.getElementById("leaveType").selectedIndex=0;
			manageCalendar(1);
			document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=REASON%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value = '';
			return false;
		}


	}
	else{
		if(aDate<currentDate){
			if(callingBlock==1)
				alert("You can't take birthday leave. Apply it as an Earned leave.");
			if(callingBlock==2)
			 	alert("You can't take anniversary leave. Apply it as an Earned leave.");
			document.getElementById("leaveType").selectedIndex=0;
			manageCalendar(1);
			document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=REASON%>.value = '';
			document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value = '';
			return false;
		}
		else
		  return true;
	}
}

function fillDates(){

	document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value=document.<%=APPLY_LEAVE%>.<%=RESTRICTED_HOLIDAYS%>.value;
	document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value=document.<%=APPLY_LEAVE%>.<%=RESTRICTED_HOLIDAYS%>.value;
	rhdate = document.<%=APPLY_LEAVE%>.<%=RESTRICTED_HOLIDAYS%>.value;
	calculateDays();
	fillJoiningDate(rhdate);
}

function otherManager(){
	<%if(manager!=null){%>
	if(<%=manager.getManagerId()%>!=document.<%=APPLY_LEAVE%>.<%=APPROVED_BY%>.value)
	{
		alert("You have not selected your immediate manager!")
	}
	<%}%>
}

function manageCalendar(type){
 	if(type==5 || type==6 || type==7){
		document.getElementById("calFromDate").style.display ='none';
		document.getElementById("calToDate").style.display ='none';
	}
	else{
		document.getElementById("calFromDate").style.display ='block';
		document.getElementById("calToDate").style.display ='block';
	}
}

function selectHalfDay(){
//document.getElementById("leaveType").value='1';
document.<%=APPLY_LEAVE%>.<%=HALF_DAY%>[0].checked=true;
document.getElementById("calFromDate").style.display ='block';
manageCalendar();
visibleHidden(1);
resetValues(1);
readonlyValues(1);
document.<%=APPLY_LEAVE%>.<%=REASON%>.value='';
document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value='';
document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value='';
document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value='';
	if(document.<%=APPLY_LEAVE%>.checkbox.checked){
		document.getElementById("listOfRestrictedForm").style.display ='none';
		document.getElementById("divHalfDay").style.display ='block';
		document.getElementById("selectType").style.display ='block';

		//changes
		//document.getElementById("labelType").style.display ='block';

		document.getElementById("divToDate").style.display ='none';
		if(document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').substring(document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').length-2) == "es"){
			document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.setAttribute('validate',document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').substring(0,document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').length-3)+"no")
		}
		document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value='0.5';
	} else{
		document.getElementById("divHalfDay").style.display ='none';
		document.getElementById("selectType").style.display ='block';

		//document.getElementById("labelType").style.display ='none';
		document.getElementById("divToDate").style.display ='block';
		if(document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').substring(document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').length-2) == "no"){
			document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.setAttribute('validate',document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').substring(0,document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.getAttribute('validate').length-2)+"yes")
		}
		document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value='';
		document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value='';
		document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value='';
		document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value='';
		document.getElementById("leaveType").selectedIndex=0;
		document.<%=APPLY_LEAVE%>.<%=LEAVE_BALANCE%>.value='';
		document.getElementById('leaveBalanceDiv').style.display ='none';
	}
	document.<%=APPLY_LEAVE%>.<%=REASON%>.value='';
}

function setJoiningDate(sdate)
{
	if(document.<%=APPLY_LEAVE%>.checkbox.checked)
	{
		if(document.<%=APPLY_LEAVE%>.<%=HALF_DAY%>[0].checked )
		{
			document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value = document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value;
		}
		else if(document.<%=APPLY_LEAVE%>.<%=HALF_DAY%>[1].checked )
		{
			fillJoiningDate(sdate);
		}
	}
}

function clearJoiningDate(){
	document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value = '';
	document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value = '';
}

function hideCalJoiningDate(){
	document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value='';
	document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value='';
}

function availedBirthdayLeave(type){
	if(type==5)
	{
		<%
		if(map.get("birthdayLeaveList")!=null)
		{
			List birthdayLeaveList = (List)map.get("birthdayLeaveList");
			if(birthdayLeaveList.size()!=0)
			{
			%>
					alert("You have already availed Birthday leave.")

					document.getElementById("leaveType").selectedIndex=0;
					document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=REASON%>.value = '';
					return false;
		<%  }
		}%>
	}
	if(type==4)
	{
		<%
		if(map.get("paternityLeaveList")!=null)
		{
			List paternityLeaveList = (List)map.get("paternityLeaveList");
			if(paternityLeaveList.size()!=0)
			{
			%>
					alert("You have already availed Paternity leave.")

					document.getElementById("leaveType").selectedIndex=0;
					document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=REASON%>.value = '';
					return false;
		<%  }
		}%>
	}
	if(type==2)
	{
		<%
		if(map.get("encashmentLeaveWaiting")!=null)
		{
			List encashmentLeaveWaiting = (List)map.get("encashmentLeaveWaiting");
			if(encashmentLeaveWaiting.size()!=0)
			{
			%>
					alert("Your encashment leave request is already waiting for approval.")

					document.getElementById("leaveType").selectedIndex=0;
					visibleHidden(type);
					resetValues(type);
					readonlyValues(type);
					document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value = '';
					document.<%=APPLY_LEAVE%>.<%=REASON%>.value = '';
					return false;
		<%  }
		}%>
	}
	return true;
}

function paternityCheck(){
	type=document.getElementById("leaveType").value;
	noOfDays=document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value;

	if(type==4){
		if(noOfDays>5 && type==4){
			errorMsg += "You can't take paternity leave of more than 5 days.\n";
			return false;
		}
	}

	//changes
	if(type==3 ){
	<%
		Boolean flag=false;
		//java.util.Date joiningDate = new Date();
		//changes
		java.util.Date joiningDate =(java.util.Date)loggedUser.getEmployee().getJoinDate();
		Date currentDate=new Date();
		String daysss=LeaveManagementUtil.getNumberOfDaysBetweenTwoDates(joiningDate,currentDate);
		StringTokenizer stringDays=new StringTokenizer(daysss);
		String expDays=stringDays.nextToken();
	%>
	expDaysInJS=<%=expDays%>;
	//changes
	//if(expDaysInJS<365){
	//	errorMsg += "Can't avail maternity leave before completion of one year.\n";
	//	return false;
	//}
	//else if(expDaysInJS>=365 && expDaysInJS<730 && noOfDays>30){
	//	errorMsg += "Can't avail more than 30 days maternity leave.\n";
	//	return false;
	//}
	//else if(expDaysInJS>=730 && expDaysInJS<1095 && noOfDays>60){
	//	errorMsg += "Can't avail more than 60 days maternity leave.\n";
	//	return false;
	//}
	//else if(expDaysInJS>=1095 && noOfDays>90){
	//	errorMsg += "Can't avail more than 90 days maternity leave.\n";
	//	return false;
	//}
}
return true;
}

//function checkEncashedDays(noOfDayz){

	<% // Float empLeaveBalance=Float.valueOf(leaveBalance.getEarned());%>

	//bal=
	<%//=empLeaveBalance%>
	//-noOfDayz;

	//claimBal=
	<%//=empLeaveBalance%>
	//-15;

	//if(bal<15){
	//	errorMsg += "You are claiming for more than your balance.(Claim Balance is:" + claimBal + ")\n";
	//	return false;
	//}
	//else if(noOfDayz%11!=0){
	//	errorMsg += "Number of working Days should be multiple of 11.(eg. 11/22/33..)\n";
	//return false;
	//}
	//return true;
//}
 /*function chkForPL(leaveId)
    {
    	<%--<%
    		Date today= new Date();

    		String gapDays=LeaveManagementUtil.getNumberOfDaysBetweenTwoDates(joiningDate,today);
    		gapDays = gapDays.substring(0,3);
    		%>--%>
    		daysGap=<%--<%=gapDays%>;--%>
    	//	alert(daysGap);
    	if(leaveId==13)
    	{
    		if(daysGap > 180)
    		{
    		//alert("gr8");
    		}
    	}
    	else{

    	}
    }*/
    function chkForShortLeave()
    {
    	//alert(document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value);
    	if(document.getElementById("leaveType").value==20)
    	{

    			document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.value=document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.value;
    			document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value='0';
    			document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.setAttribute("validate","");

    	}
    }

    function chkForCasualLeaves() {
    	<%
			Calendar currentDateCal = Calendar.getInstance();
			DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
			String currentDateString =dateFormat.format(currentDateCal.getTime());

			currentDateCal.setTime(HMSUtil.dateFormatterDDMMYYYY(currentDateString));

    		java.util.Date joiningDate1 =(java.util.Date)loggedUser.getEmployee().getJoinDate();
    		Calendar joiningDateCal = Calendar.getInstance();
    		joiningDateCal.setTime(joiningDate1);
    		joiningDateCal.add(Calendar.DAY_OF_MONTH, 30);
			int diff = joiningDateCal.compareTo(currentDateCal);
    	%>
    	var diffval = <%=diff%>;
    	if(document.getElementById("leaveType").value==12){
	    	if(diffval == 1){
	    		alert('You can not take Casual Leave upto 30 days of joining.');
	    		return false;
	    	}else{
	    		return true;
	    	}
    	}
    	return true;
    }
   function chkForCLandSL() {
		var SLBal = document.getElementById("SLBalance").value;
		var CLBal = document.getElementById("CLBalance").value;
		var PLBal = document.getElementById("PLBalance").value;
    	if(document.getElementById("leaveType").value==12
    	    || document.getElementById("leaveType").value==10){
				if(SLBal <=0 && CLBal <=0 && PLBal > 0){
					alert('You can not take casual leave and sick leave.');
					return false;
				}
		}
    	if(document.getElementById("leaveType").value==12
    	    || document.getElementById("leaveType").value==10
    	    || document.getElementById("leaveType").value==13){
				if(SLBal <=0 && CLBal <=0 && PLBal <= 0){
					if(confirm('Your CL,PL and SL are 0 or less than 0.\nDo you still want to continue.')){
						return true;
					}else{
						return false;
					}
				}
    	}
    	if(document.getElementById("leaveType").value==13){
				if(SLBal >0 && CLBal <=0 && PLBal <= 0){
					if(confirm('Your PL 0 or less than 0.\nDo you still want to continue.')){
						return true;
					}else{
						return false;
					}
				}
    	}
    	return true;
    }

    function chkForOptionalLeave(leaveId)
    {
    	if(leaveId==21)
    	{
    		document.getElementById("listOfRestrictedForm").style.display="block";
    		document.getElementById("leaveBalanceDiv").style.display="none";
    		document.getElementById("dates").style.display="none";
    		//document.getElementById("divToDate").style.display="none";

    		fillDates();
    	 	document.<%=APPLY_LEAVE%>.<%=RESTRICTED_HOLIDAYS%>.setAttribute("validate","Holiday,string,yes");
			document.<%=APPLY_LEAVE%>.<%= NO_OF_WORKING_DAYS %>.value="1";
    	}
    	else if(leaveId!=2){

    		document.getElementById("listOfRestrictedForm").style.display="none";

    		document.getElementById("dates").style.display="block";
    	//	document.getElementById("divToDate").style.display="block";
    		//document.getElementById("divJoinDate").style.display="block";
    		document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.setAttribute("validate","From Date,date,yes");
    		document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.setAttribute("validate","To Date,date,yes");
    		document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.setAttribute("validate","Joining Date,date,yes");
    		document.<%=APPLY_LEAVE%>.<%=RESTRICTED_HOLIDAYS%>.setAttribute("validate","");
    	}

    }
    function chkForPaternity(leaveId)
    {

    	if(leaveId==4)
    	{
    		document.getElementById("childDiv").style.display="block";
    		document.getElementById("childselect").setAttribute("validate","Child,string,yes");
    		//document.getElementById("leaveBalanceDiv").style.display="none";
    	}
    	else
    	{
    		document.getElementById("childDiv").style.display="none";
    		document.getElementById("childselect").setAttribute("validate","");
    	}

    }
    function chkForEncashment(leaveId)
    {

    	if(leaveId==2)
    	{
    		document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.setAttribute("validate","");
    		document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.setAttribute("validate","");
    		document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.setAttribute("validate","");
    		document.<%=APPLY_LEAVE%>.<%=RESTRICTED_HOLIDAYS%>.setAttribute("validate","");
    		document.<%=APPLY_LEAVE%>.<%= NO_OF_WORKING_DAYS %>.value="";
    		document.<%=APPLY_LEAVE%>.<%= NO_OF_WORKING_DAYS %>.readOnly=false;
    		document.getElementById("dates").style.display="none";
    		document.getElementById("divJoinDate").style.display="none";
    		document.getElementById("listOfRestrictedForm").style.display="none";

    	}
    	else if(leaveId!==21){

    		document.getElementById("dates").style.display="block";

    		document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>.setAttribute("validate","From Date,date,yes");
    		document.<%=APPLY_LEAVE%>.<%=TO_DATE%>.setAttribute("validate","To Date,date,yes");
    		document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.setAttribute("validate","Joining Date,date,yes");
    		document.<%=APPLY_LEAVE%>.<%=RESTRICTED_HOLIDAYS%>.setAttribute("validate","Holiday,string,yes");
    		document.<%=APPLY_LEAVE%>.<%= NO_OF_WORKING_DAYS %>.readOnly=true;
    	}
    }


function fillJoiningDate(sdate){

flag=true;

		if(sdate!=''){
		sdate=new Date(sdate.substring(6),(sdate.substring(3,5) - 1) ,sdate.substring(0,2));
		while(flag){
			dayOfToDate=sdate.getDate();
			monthOfToDate=sdate.getMonth();
			yearOfToDate=sdate.getFullYear();
			dayOfToDate++;
			sdate.setDate(dayOfToDate);
			sdate.setMonth(monthOfToDate);
			sdate.setYear(yearOfToDate);

			dayOfToDate=sdate.getDate();
			monthOfToDate=sdate.getMonth();
			yearOfToDate=sdate.getFullYear();

			if(dayOfToDate==1)
			monthOfToDate++;
			if(dayOfToDate==1 && monthOfToDate==12)
			yearOfToDate++;

			sdate.setDate(dayOfToDate);
			sdate.setMonth(monthOfToDate);
			sdate.setYear(yearOfToDate);
			//alert(sdate.getDay());
			if(sdate.getDay()==0 ||sdate.getDay()==6 )
				flag=true;
			else
				flag=false;
			<%
				Iterator holiIterator=listOfHolidays.iterator();
				for(int i=1;holiIterator.hasNext();i++)
				{
					Holidaycalendar holiday=(Holidaycalendar)holiIterator.next();
					java.util.Date holiDate=(java.util.Date)holiday.getHolidayDate();
					String holidaydate = LeaveManagementUtil.convertDateToStringWithoutTime(holiDate);
			%>
					holidate="<%=holidaydate%>";
					holidaydate  = new Date(holidate.substring(6),(holidate.substring(3,5) - 1) ,holidate.substring(0,2));
					if(sdate-holidaydate==0)
					{
						flag=true;
					}

			<%}%>

		}
		dayOfToDate=sdate.getDate();
		monthOfToDate=sdate.getMonth();
		yearOfToDate=sdate.getFullYear();
		monthOfToDate++;
		if(dayOfToDate < 10)
			dayOfToDate = "0"+dayOfToDate;
		if(monthOfToDate < 10)
			monthOfToDate = "0"+monthOfToDate;

		document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>.value =dayOfToDate+"/"+monthOfToDate+"/"+yearOfToDate;

	}

}

function checkNoOfDays(){

	noOfDays = document.<%=APPLY_LEAVE%>.<%=NO_OF_WORKING_DAYS%>.value;
	leaveBalance = document.<%=APPLY_LEAVE%>.<%=LEAVE_BALANCE%>.value;

	leaveBalance = parseFloat(leaveBalance);
	//alert(leaveBalance);
	if((document.getElementById("leaveType").value==="3") ||(document.getElementById("leaveType").value==="4"))
	{
	}else{
	if(noOfDays > leaveBalance || leaveBalance==0){
			answer = confirm("Your Leave Balance will go in negative. Do you really want to Continue?")

			//alert(answer);
			//return false;
			if (answer == false)
			{
					return false;
			}
	}
	}
	return true;
}
function getLeaveList(field)
{
	var half;
	if(field.checked)
	{
		half='n';
	}
	else
	{
		half='y';
	}

	var orGroupId ="";
    var x=document.getElementById("selectType")

	 //----------------------AJAX PART------------Start------

  	var xmlHttp;
  	try {
    	// Firefox, Opera 8.0+, Safari
    	xmlHttp=new XMLHttpRequest();
  	}catch (e){
    	// Internet Explorer
    try{
      xmlHttp=new ActiveXObject("Msxml2.XMLHTTP");
    }catch (e){
      try{
        xmlHttp=new ActiveXObject("Microsoft.XMLHTTP");
      }catch (e){
        alert("Your browser does not support AJAX!");
        return false;
      }
     }
   }
    xmlHttp.onreadystatechange=function()
    {
    if (xmlHttp.readyState>0 && xmlHttp.readyState<4){
     document.getElementById("selectType").innerHTML='<font id="error">Loading...</font>'
      document.getElementById("selectType").innerHTML=""
    }else
      if(xmlHttp.readyState==4){

         document.getElementById("selectType").innerHTML = xmlHttp.responseText;
      }
    }
    xmlHttp.open("GET","/hms/hrms/leave?method=getLeaveListJsp&half="+half,true);
    xmlHttp.send(null)

}

</script>
<%
	String sex = "";
	String maritalStatusCode = "";
	if (loggedUser.getEmployee().getEmployeePersonalDetails() != null) {
		sex = loggedUser.getEmployee().getEmployeePersonalDetails()
			.getGender().getAdministrativeSexName();
	maritalStatusCode = loggedUser.getEmployee()
			.getEmployeePersonalDetails().getMaritalStatus()
			.getMaritalStatusCode();
	}
%>
<form name="<%=APPLY_LEAVE%>" method="post">
<h4>
<div id="message"></div>
</h4>
<div class="titleBg">
<h2>Leave Application</h2>
</div>
<div class="clear"></div>
<div class="Block"><jsp:include page="showLeaveBalanceDetails.jsp"></jsp:include>

<div class="clear"></div>

<label>Half Day Leave</label> <input type="checkbox" name="checkbox"
	class="radioCheck" id="halfDayChkBox" value="half day"
	onclick="getLeaveList(this);selectHalfDay();" class="radioCheck" /> <label
	class="smallAuto">Choose check box only in case of Half Day
Leave</label>
<div id="divHalfDay" style="display: none;" name="divHalfDay"><input
	type="radio" id="<%=HALF_DAY%>" name="<%=HALF_DAY%>" value="f"
	onclick="hideCalJoiningDate();clearJoiningDate();" class="radioCheck" />
<label class="valueMedium">First Half</label> <input type="radio"
	id="<%=HALF_DAY%>" name="<%=HALF_DAY%>" value="s"
	onclick="hideCalJoiningDate();clearJoiningDate();" class="radioCheck" />
<label class="valueMedium">Second Half</label></div>
<div class="clear"></div>

<div id="selectType" style="display: block;"><label><span>*</span>
Leave Type</label> <select id="leaveType" name="<%=TYPE%>"
	validate="Type,nothing,yes" onkeyup="showLeaveBalance(this.value);"
	onchange="availedBirthdayLeave(this.value);manageDates(this.value);manageCalendar(this.value);showLeaveBalance(this.value);chkForPaternity(this.value);chkForEncashment(this.value);chkForOptionalLeave(this.value);">
	<option value="">Select</option>
	<%
		for (HrMasLeaveTypeMediator hrMasLeaveType : listOfTypesOfLeaves) {
			if (hrMasLeaveType.getLeaveType().getStatus().equals("y")
					&& !hrMasLeaveType.getLeaveType().getLeaveType()
							.getId().equals(20)) {
				if (maritalStatusCode.equalsIgnoreCase("M")
						&& sex.equalsIgnoreCase("male")
						&& hrMasLeaveType.getLeaveType().getLeaveType()
								.getId().equals(4)) {
					if (childrenCount < 3 && statusPaternity.equals("n")) {
	%>
	<option
		value="<%=hrMasLeaveType.getLeaveType().getLeaveType().getId()%>"><%=hrMasLeaveType.getLeaveType()
											.getLeaveType().getDescription()%></option>
	<%
		}
	%>
	<%
		} else if (maritalStatusCode.equalsIgnoreCase("M")
						&& sex.equalsIgnoreCase("female")
						&& hrMasLeaveType.getLeaveType().getLeaveType()
								.getId().equals(3)) {
					if (childrenCount < 3 && statusMaternity.equals("n")) {
	%>
	<option
		value="<%=hrMasLeaveType.getLeaveType().getLeaveType().getId()%>"><%=hrMasLeaveType.getLeaveType()
											.getLeaveType().getDescription()%></option>
	<%
		}
	%>
	<%
		} else {
					if (!hrMasLeaveType.getLeaveType().getLeaveType()
							.getId().equals(4)
							&& !hrMasLeaveType.getLeaveType()
									.getLeaveType().getId().equals(3)) {
	%>
	<option
		value="<%=hrMasLeaveType.getLeaveType().getLeaveType().getId()%>"><%=hrMasLeaveType.getLeaveType()
											.getLeaveType().getDescription()%></option>
	<%
		}
	%>
	<%
		}
			}
		}
	%>
</select></div>

<script type="text/javascript">
       </script> <input type="hidden" name="hrMasLeaveTypeNewId"
	id="hrMasLeaveTypeNewId" value="" /> <script>
			document.<%=APPLY_LEAVE%>.<%=TYPE%>.focus();
	</script> <script type="text/javascript">

	function chkHalfDayAllow()
	{

	<%
		for(HrMasLeaveTypeMediator hrMasLeaveType:listOfTypesOfLeaves){
			if(hrMasLeaveType.getLeaveType().getStatus().equals("y")){
				%>
				if(document.<%=APPLY_LEAVE%>.leaveType.value==='<%=hrMasLeaveType.getLeaveType().getLeaveType().getId()%>')
				{
				 <% if(hrMasLeaveType.getLeaveType().getHalfDayAllow()!=null &&(hrMasLeaveType.getLeaveType().getHalfDayAllow().equalsIgnoreCase("y"))){%>
					 document.<%=APPLY_LEAVE%>.checkbox.checked=false
					 document.<%=APPLY_LEAVE%>.checkbox.disabled=true;
					 document.getElementById('divHalfDay').style.display='none';

				 <%}else{%>
				 	document.<%=APPLY_LEAVE%>.checkbox.disabled=false;
				 	document.getElementById('divHalfDay').style.display='block';
				 <%}%>
				}
		<% }
		}
		%>
	}
	</script>
<div id="childDiv" style="display: none;"><label><span>*</span>
Child </label> <select name="childselect" id="childselect"
	validate="Child,string,yes" onchange="chkChildren(this.value);">
	<option value="">Select</option>
	<option value="1">First Child</option>
	<option value="2">Second Child</option>

</select></div>
<script type="text/javascript">
    function chkChildren(noOfChild)
    {

    //	if(noOfChild == 3)
    //	{
    //		document.getElementById("childselect").value="";
    //		alert("You are not eligble for this leave");

    //		return false;
    //	}
    //		return true;

    }
    function showEmployeeListAjax(obj){
    	var departmentId = obj.value;
    	if(departmentId != '0' && departmentId != ''){
    		submitProtoAjaxWithDivName('<%=APPLY_LEAVE%>','/hms/hrms/leave?method=showEmpForDept','employeeDiv');
    	}
    }
    </script>
<div id="listOfRestrictedForm" style="display: none;"><label><span>*</span>
Optional Holidays</label> <select name="<%=RESTRICTED_HOLIDAYS%>"
	validate="Holiday,string,yes" onchange="fillDates(),availedRh()">
	<option value="">Select</option>
	<%
		List listOfRestrictedHolidays = (List) map
				.get("listOfRestrictedHolidays");
		if (listOfRestrictedHolidays != null) {
			Iterator rhIterator = listOfRestrictedHolidays.iterator();
			while (rhIterator.hasNext()) {
				Holidaycalendar rh = (Holidaycalendar) rhIterator.next();
				java.util.Date jDate = (java.util.Date) rh.getHolidayDate();
	%>
	<option
		value="<%=LeaveManagementUtil.convertDateToStringWithoutTime(jDate)%>"><%=LeaveManagementUtil
									.convertDateToStringWithoutTime(jDate)%><%="-("%><%=rh.getTitle()%><%=")"%></option>
	<%
		}
		}
	%>
</select></div>
<div class="clear"></div>
<div id="leaveBalanceDiv" style="display: none;"><label
	id="balanceLbl">Balance </label> <input type="hidden" id="balance"
	name="<%=LEAVE_BALANCE%>" value=""><label id="allowDayLbl">Entitlement</label></div>

<div class="clear"></div>

<div id="labelType" style="display: none;"><label>Type:</label> <label
	class="value">Earned</label> <input type="hidden" id="typeId"
	name="<%=TYPE%>" value="1" /></div>

<div id="dates" style="display: block;">
<div id="datesForm" style="display: block;"><label><span>*</span>
From Date</label> <input name="<%=FROM_DATE%>" type="text" readonly
	validate='From Date,date,yes' value="" class="date" /> <img
	src="/hms/jsp/images/cal.gif" width="16" height="16" border="0"
	id="calFromDate"
	onclick="javascript:setdate('',document.<%=APPLY_LEAVE%>.<%=FROM_DATE%>,event)" />
</div>
<div id="divToDate"><label><span>*</span> To Date</label> <input
	type="text" name="<%=TO_DATE%>" readonly validate='To Date,date,yes'
	value="" class="date" /> <img src="/hms/jsp/images/cal.gif" width="16"
	height="16" border="0" id="calToDate"
	onclick="javascript:setdate('',document.<%=APPLY_LEAVE%>.<%=TO_DATE%>,event)" />
</div>
</div>

<label>No. of Days</label> <input type="text"
	name="<%=NO_OF_WORKING_DAYS%>" class="readOnly" readonly maxlength="4"
	validate="No of working days,num,yes" value="">
<div class="clear"></div>
<div id="divJoinDate"><label><span>*</span> Joining Back
On</label> <input type="text" name="<%=JOINING_DATE%>" readonly="readonly"
	validate='Joinning Date,date,yes' value="" class="date"><img
	src="/hms/jsp/images/cal.gif" width="16" height="16" border="0"
	id="calToDate"
	onclick="javascript:setdate('',document.<%=APPLY_LEAVE%>.<%=JOINING_DATE%>,event)" /></div>

<label><span>*</span> Contact Number</label> <input type="text"
	name="<%=CONTACT_PHONE%>" maxlength="11"
	validate="Contact Number,int,yes"><label>Alternate
Email Id</label> <input type="text" name="<%=EMAIL%>" maxlength="50"
	validate="Email Id,email,no">
<div class="clear"></div>
<label><span>*</span> Reason</label> <textarea id="reason"
	name="<%=REASON %>" onkeydown="refreshLengthWithoutMeter1(this.id,200)"
	onkeyup="refreshLengthWithoutMeter(this.id,200)"
	validate="Reason,string,yes"></textarea> <label>Address On
Leave</label> <textarea id="contactAddress" name="<%=CONTACT_ADDRESS%>"
	onkeydown="refreshLengthWithoutMeter1(this.id,100)"
	onkeyup="refreshLengthWithoutMeter(this.id,100)"
	validate="Contact Address,address,no"></textarea> <label>Line
Manager</label> <input type="radio" id="<%=MANAGER_TYPE%>"
	name="<%=MANAGER_TYPE%>" value="m" onclick="showHideLineManager(this)"
	checked="checked" class="radioCheck" /> <label class="medium">Other</label>
<input type="radio" id="<%=MANAGER_TYPE%>" name="<%=MANAGER_TYPE%>"
	value="o" onclick="showHideLineManager(this);" class="radioCheck" />

<div class="clear"></div>

<div id="divLineManager" style="display: block;"><label><span>*</span>
Approver</label> <select name="<%=APPROVED_BY%>" id="<%=APPROVED_BY%>"
	validate="Approver,string,yes">
	<option value="">Select</option>
	<%
		List<UserManager> userList = (List<UserManager>) map.get("manager");
		Iterator iterator = userList.iterator();
		while (iterator.hasNext()) {
			UserManager user = (UserManager) iterator.next();
	%>
	<option value="<%= user.getManagers().getId() %>"><%=user.getManagers().getFirstName() + " "
						+ user.getManagers().getLastName() + " -- "
						+ user.getManagers().getEmployeeCode()%></option>
	<%
		}
	%>
</select></div>

<div id="divOtherManager" style="display: none;"><label><span>*</span>
Department</label> <select name="<%=DEPARTMENT_ID%>" id="<%=DEPARTMENT_ID%>"
	validate="Department,string,no">
	<option value="" onclick="showEmployeeListAjax(this);">Select</option>
	<%
		for (MasDepartment masDepartment : masDepartmentList) {
	%>
	<option onclick="showEmployeeListAjax(this);"
		value="<%=masDepartment.getId()%>"><%=masDepartment.getDepartmentName()%></option>
	<%
		}
	%>
</select>
<div id="employeeDiv"><label><span>*</span> Approver</label> <select
	name="<%=APPROVED_BY_OTHER%>" id="<%=APPROVED_BY_OTHER%>"
	validate="Approver,string,no">
	<option value="">Select</option>
</select></div>
</div>


<div class="clear"></div>

<input type="hidden" name="holiday" /> <input type="hidden"
	name="typeFlag" /> <input type="hidden" name="typeFlagForJoiningDate"
	id="typeFlagForJoiningDate" value="" /> <input type="hidden"
	id="CLBalance" name="CLBalance" value="" /> <input type="hidden"
	id="SLBalance" name="SLBalance" value="" /> <input type="hidden"
	id="PLBalance" name="PLBalance" value="" /> <input type="hidden"
	id="leaveId" name="leaveIdForDatabase" value="" /> <input
	type="hidden" id="balanceId" name="balanceIdForDatabase" value="" />
<div id="waitMessage" class="msg" style="display: none">Please
Wait...</div>
<div class="paddingTop15"></div>
<div class="clear"></div></div>
<div class="clear"></div>
<div class="division"></div>
<input type="button" name="apply" value="Apply" class="button"
	onclick="setHalfDay();chkForShortLeave();submitThisForm();" /> <input
	type="button" name="reset" value="Reset" class="buttonHighlight"
	onclick="location.href='leave?method=showLeaveApplicationJsp'" /><input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}">
</form>
<div class="clear"></div>
<div class="division"></div>
